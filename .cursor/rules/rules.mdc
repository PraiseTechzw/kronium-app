---
description: Cursor AI rules for building a full-stack, professional Flutter app using Firebase and Appwrite with beautiful UI and clean architecture.
globs:
  - "**/*.dart"
  - "**/*.yaml"
  - "**/*.js"
  - "**/*.ts"
  - "**/*.json"
  - "**/*.html"
  - "**/*.md"

alwaysApply: true

rules:
  - match: "**/*"
    description: |
      Praise is building a professional full-stack app using:
      - Frontend: Flutter (with Riverpod or similar for state management)
      - Backend: Firebase (Auth, Firestore, Functions)
      - Storage: Appwrite (for media/file handling)

      Goals:
      • Precise and production-quality code
      • Clean models and data handling
      • Beautiful, responsive UI using Flutter best practices (e.g., custom widgets, animations, dark/light themes)
      • No unnecessary explanations — generate direct code
      • Clean architecture (e.g., feature-based folders, separation of concerns)
      • Assume real-world usage and scalability

      Assistant should:
      • Prefer direct code output only
      • Avoid essays unless explanation is explicitly requested
      • Focus only on relevant stack (Flutter + Firebase + Appwrite)
      • Use modern and professional design patterns
      • Add brief inline comments only when necessary

    actions:
      - type: codeOnly
      - type: noExplanations
      - type: stayInStack
      - type: preferFlutterFirebaseAppwrite
      - type: fullStackSupport
      - type: cleanArchitecture
      - type: beautifulUI
